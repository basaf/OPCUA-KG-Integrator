/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.6.2, using .NET Server 2.6.0 template (version 1)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
**
**     Generated by paukerflorian <pauker@ift.at>
** </auto-generated>
**
** Copyright (c) 2006-2019 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.7
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.7, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://auto.tuwien.ac.at/PackedBedRegenerator/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.7/
**
** Created: 21.03.2019
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace ASG.ASG_NS
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class DataTypes
    {
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the <TemperatureSensor> Object.
        /// </summary>
        public const uint BulkContainerType_TemperatureSensor = 5017;

        /// <summary>
        /// The identifier for the T_H Object.
        /// </summary>
        public const uint HeaterType_T_H = 5013;

        /// <summary>
        /// The identifier for the <TemperatureSensor> Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_TemperatureSensor = 5010;

        /// <summary>
        /// The identifier for the BulkContainer Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer = 5006;

        /// <summary>
        /// The identifier for the TemperatureSensor Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer_TemperatureSensor = 5007;

        /// <summary>
        /// The identifier for the Heater Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater = 5014;

        /// <summary>
        /// The identifier for the T_H Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_T_H = 5015;

        /// <summary>
        /// The identifier for the Ventilator Object.
        /// </summary>
        public const uint PackedBedRegeneratorType_Ventilator = 5016;

        /// <summary>
        /// The identifier for the MassFlowSensor Object.
        /// </summary>
        public const uint VentilatorType_MassFlowSensor = 5001;

        /// <summary>
        /// The identifier for the PackedBedRegenerator Object.
        /// </summary>
        public const uint PackedBedRegenerator = 5002;

        /// <summary>
        /// The identifier for the BulkContainer Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer = 5008;

        /// <summary>
        /// The identifier for the T_L1 Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L1 = 5009;

        /// <summary>
        /// The identifier for the T_L2 Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L2 = 5012;

        /// <summary>
        /// The identifier for the T_L3 Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L3 = 5018;

        /// <summary>
        /// The identifier for the T_L4 Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L4 = 5019;

        /// <summary>
        /// The identifier for the Heater Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater = 5003;

        /// <summary>
        /// The identifier for the T_H Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_T_H = 5004;

        /// <summary>
        /// The identifier for the T_i Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_i = 5021;

        /// <summary>
        /// The identifier for the T_o Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_o = 5011;

        /// <summary>
        /// The identifier for the Ventilator Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator = 5005;

        /// <summary>
        /// The identifier for the m_flow Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_m_flow = 5020;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the BaseSensorType ObjectType.
        /// </summary>
        public const uint BaseSensorType = 1002;

        /// <summary>
        /// The identifier for the MassFlowSensorType ObjectType.
        /// </summary>
        public const uint MassFlowSensorType = 1004;

        /// <summary>
        /// The identifier for the TemperatureSensorType ObjectType.
        /// </summary>
        public const uint TemperatureSensorType = 1003;

        /// <summary>
        /// The identifier for the BulkContainerType ObjectType.
        /// </summary>
        public const uint BulkContainerType = 1008;

        /// <summary>
        /// The identifier for the HeaterType ObjectType.
        /// </summary>
        public const uint HeaterType = 1007;

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType ObjectType.
        /// </summary>
        public const uint PackedBedRegeneratorType = 1005;

        /// <summary>
        /// The identifier for the VentilatorType ObjectType.
        /// </summary>
        public const uint VentilatorType = 1006;

    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class Methods
    {
        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint HeaterType_SetSetpoint = 7002;

        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_SetSetpoint = 7003;

        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint PackedBedRegeneratorType_Ventilator_SetSetpoint = 7004;

        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint VentilatorType_SetSetpoint = 7001;

        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_SetSetpoint = 7005;

        /// <summary>
        /// The identifier for the SetSetpoint Method.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_SetSetpoint = 7006;

    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class ReferenceTypes
    {
    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the CurrentMassFlow Variable.
        /// </summary>
        public const uint MassFlowSensorType_CurrentMassFlow = 6004;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint MassFlowSensorType_CurrentMassFlow_EngineeringUnits = 6029;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint MassFlowSensorType_CurrentMassFlow_EURange = 6005;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint BaseSensorType_SerialNumber = 6001;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint TemperatureSensorType_CurrentTemperature = 6002;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint TemperatureSensorType_CurrentTemperature_EngineeringUnits = 6031;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint TemperatureSensorType_CurrentTemperature_EURange = 6003;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint BulkContainerType_TemperatureSensor_CurrentTemperature = 6045;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint BulkContainerType_TemperatureSensor_CurrentTemperature_EngineeringUnits = 6067;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint BulkContainerType_TemperatureSensor_CurrentTemperature_EURange = 6046;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint BulkContainerType_TemperatureSensor_SerialNumber = 6047;

        /// <summary>
        /// The identifier for the Setpoint Variable.
        /// </summary>
        public const uint HeaterType_Setpoint = 6053;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint HeaterType_SetSetpoint_InputArguments = 6036;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint HeaterType_T_H_CurrentTemperature = 6037;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint HeaterType_T_H_CurrentTemperature_EngineeringUnits = 6065;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint HeaterType_T_H_CurrentTemperature_EURange = 6038;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint HeaterType_T_H_SerialNumber = 6039;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature = 6017;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EngineeringUnits = 6064;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EURange = 6018;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_TemperatureSensor_SerialNumber = 6019;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature = 6011;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EngineeringUnits = 6063;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EURange = 6012;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_BulkContainer_TemperatureSensor_SerialNumber = 6013;

        /// <summary>
        /// The identifier for the Setpoint Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_Setpoint = 6054;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_SetSetpoint_InputArguments = 6040;

        /// <summary>
        /// The identifier for the CurrentTemperature Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_T_H_CurrentTemperature = 6041;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EngineeringUnits = 6066;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EURange = 6042;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Heater_T_H_SerialNumber = 6043;

        /// <summary>
        /// The identifier for the Setpoint Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Ventilator_Setpoint = 6051;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint PackedBedRegeneratorType_Ventilator_SetSetpoint_InputArguments = 6044;

        /// <summary>
        /// The identifier for the CurrentMassFlow Variable.
        /// </summary>
        public const uint VentilatorType_MassFlowSensor_CurrentMassFlow = 6033;

        /// <summary>
        /// The identifier for the EngineeringUnits Variable.
        /// </summary>
        public const uint VentilatorType_MassFlowSensor_CurrentMassFlow_EngineeringUnits = 6069;

        /// <summary>
        /// The identifier for the EURange Variable.
        /// </summary>
        public const uint VentilatorType_MassFlowSensor_CurrentMassFlow_EURange = 6034;

        /// <summary>
        /// The identifier for the SerialNumber Variable.
        /// </summary>
        public const uint VentilatorType_MassFlowSensor_SerialNumber = 6035;

        /// <summary>
        /// The identifier for the Setpoint Variable.
        /// </summary>
        public const uint VentilatorType_Setpoint = 6050;

        /// <summary>
        /// The identifier for the InputArguments Variable.
        /// </summary>
        public const uint VentilatorType_SetSetpoint_InputArguments = 6032;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature = 6014;

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EngineeringUnits = 6068;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EURange = 6015;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L1_SerialNumber = 6016;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature = 6023;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature_EURange = 6024;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L2_SerialNumber = 6025;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature = 6026;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature_EURange = 6027;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L3_SerialNumber = 6028;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature = 6030;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature_EURange = 6048;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_BulkContainer_T_L4_SerialNumber = 6049;

        /// <summary>
        /// The identifier for the Setpoint Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_Setpoint = 6055;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_SetSetpoint_InputArguments = 6006;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_T_H_CurrentTemperature = 6007;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_T_H_CurrentTemperature_EURange = 6008;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_Heater_T_H_SerialNumber = 6009;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_i_CurrentTemperature = 6059;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_i_CurrentTemperature_EURange = 6060;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_i_SerialNumber = 6061;

        /// <summary>
        /// The identifier for the CurrentTemperature Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_o_CurrentTemperature = 6020;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_o_CurrentTemperature_EURange = 6021;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_T_o_SerialNumber = 6022;

        /// <summary>
        /// The identifier for the CurrentMassFlow Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow = 6056;

        /// <summary>
        /// The identifier for the EngineeringUnits Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EngineeringUnits = 6062;

        /// <summary>
        /// The identifier for the EURange Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EURange = 6057;

        /// <summary>
        /// The identifier for the SerialNumber Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_m_flow_SerialNumber = 6058;

        /// <summary>
        /// The identifier for the Setpoint Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_Setpoint = 6052;

        /// <summary>
        /// The identifier for the InputArguments Object.
        /// </summary>
        public const uint PackedBedRegenerator_Ventilator_SetSetpoint_InputArguments = 6010;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class VariableTypes
    {
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class DataTypeIds
    {
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class MethodIds
    {
        /// <summary>
        /// The identifier for the HeaterType_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_SetSetpoint = new ExpandedNodeId(Methods.HeaterType_SetSetpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_SetSetpoint = new ExpandedNodeId(Methods.PackedBedRegeneratorType_Heater_SetSetpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Ventilator_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Ventilator_SetSetpoint = new ExpandedNodeId(Methods.PackedBedRegeneratorType_Ventilator_SetSetpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_SetSetpoint = new ExpandedNodeId(Methods.VentilatorType_SetSetpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_SetSetpoint = new ExpandedNodeId(Methods.PackedBedRegenerator_Heater_SetSetpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_SetSetpoint Method.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_SetSetpoint = new ExpandedNodeId(Methods.PackedBedRegenerator_Ventilator_SetSetpoint, Namespaces.ASG_NS);

    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the BulkContainerType_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType_TemperatureSensor = new ExpandedNodeId(Objects.BulkContainerType_TemperatureSensor, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_T_H Object.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_T_H = new ExpandedNodeId(Objects.HeaterType_T_H, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_TemperatureSensor = new ExpandedNodeId(Objects.PackedBedRegeneratorType_TemperatureSensor, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer = new ExpandedNodeId(Objects.PackedBedRegeneratorType_BulkContainer, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer_TemperatureSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer_TemperatureSensor = new ExpandedNodeId(Objects.PackedBedRegeneratorType_BulkContainer_TemperatureSensor, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater = new ExpandedNodeId(Objects.PackedBedRegeneratorType_Heater, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_T_H Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_T_H = new ExpandedNodeId(Objects.PackedBedRegeneratorType_Heater_T_H, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Ventilator Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Ventilator = new ExpandedNodeId(Objects.PackedBedRegeneratorType_Ventilator, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_MassFlowSensor Object.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_MassFlowSensor = new ExpandedNodeId(Objects.VentilatorType_MassFlowSensor, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator = new ExpandedNodeId(Objects.PackedBedRegenerator, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer = new ExpandedNodeId(Objects.PackedBedRegenerator_BulkContainer, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L1 Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L1 = new ExpandedNodeId(Objects.PackedBedRegenerator_BulkContainer_T_L1, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L2 Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L2 = new ExpandedNodeId(Objects.PackedBedRegenerator_BulkContainer_T_L2, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L3 Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L3 = new ExpandedNodeId(Objects.PackedBedRegenerator_BulkContainer_T_L3, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L4 Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L4 = new ExpandedNodeId(Objects.PackedBedRegenerator_BulkContainer_T_L4, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater = new ExpandedNodeId(Objects.PackedBedRegenerator_Heater, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_T_H Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_T_H = new ExpandedNodeId(Objects.PackedBedRegenerator_Heater_T_H, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_i Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_i = new ExpandedNodeId(Objects.PackedBedRegenerator_T_i, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_o Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_o = new ExpandedNodeId(Objects.PackedBedRegenerator_T_o, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator = new ExpandedNodeId(Objects.PackedBedRegenerator_Ventilator, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_m_flow Object.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_m_flow = new ExpandedNodeId(Objects.PackedBedRegenerator_Ventilator_m_flow, Namespaces.ASG_NS);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the BaseSensorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId BaseSensorType = new ExpandedNodeId(ObjectTypes.BaseSensorType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the MassFlowSensorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId MassFlowSensorType = new ExpandedNodeId(ObjectTypes.MassFlowSensorType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the TemperatureSensorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType = new ExpandedNodeId(ObjectTypes.TemperatureSensorType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BulkContainerType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType = new ExpandedNodeId(ObjectTypes.BulkContainerType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType = new ExpandedNodeId(ObjectTypes.HeaterType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType = new ExpandedNodeId(ObjectTypes.PackedBedRegeneratorType, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType = new ExpandedNodeId(ObjectTypes.VentilatorType, Namespaces.ASG_NS);

    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class ReferenceTypeIds
    {
    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the MassFlowSensorType_CurrentMassFlow Variable.
        /// </summary>
        public static readonly ExpandedNodeId MassFlowSensorType_CurrentMassFlow = new ExpandedNodeId(Variables.MassFlowSensorType_CurrentMassFlow, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the MassFlowSensorType_CurrentMassFlow_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId MassFlowSensorType_CurrentMassFlow_EngineeringUnits = new ExpandedNodeId(Variables.MassFlowSensorType_CurrentMassFlow_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the MassFlowSensorType_CurrentMassFlow_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId MassFlowSensorType_CurrentMassFlow_EURange = new ExpandedNodeId(Variables.MassFlowSensorType_CurrentMassFlow_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BaseSensorType_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId BaseSensorType_SerialNumber = new ExpandedNodeId(Variables.BaseSensorType_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the TemperatureSensorType_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_CurrentTemperature = new ExpandedNodeId(Variables.TemperatureSensorType_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the TemperatureSensorType_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.TemperatureSensorType_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the TemperatureSensorType_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId TemperatureSensorType_CurrentTemperature_EURange = new ExpandedNodeId(Variables.TemperatureSensorType_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BulkContainerType_TemperatureSensor_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType_TemperatureSensor_CurrentTemperature = new ExpandedNodeId(Variables.BulkContainerType_TemperatureSensor_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BulkContainerType_TemperatureSensor_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType_TemperatureSensor_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.BulkContainerType_TemperatureSensor_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BulkContainerType_TemperatureSensor_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType_TemperatureSensor_CurrentTemperature_EURange = new ExpandedNodeId(Variables.BulkContainerType_TemperatureSensor_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the BulkContainerType_TemperatureSensor_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId BulkContainerType_TemperatureSensor_SerialNumber = new ExpandedNodeId(Variables.BulkContainerType_TemperatureSensor_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_Setpoint = new ExpandedNodeId(Variables.HeaterType_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.HeaterType_SetSetpoint_InputArguments, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_T_H_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_T_H_CurrentTemperature = new ExpandedNodeId(Variables.HeaterType_T_H_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_T_H_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_T_H_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.HeaterType_T_H_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_T_H_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_T_H_CurrentTemperature_EURange = new ExpandedNodeId(Variables.HeaterType_T_H_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the HeaterType_T_H_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId HeaterType_T_H_SerialNumber = new ExpandedNodeId(Variables.HeaterType_T_H_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegeneratorType_TemperatureSensor_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_TemperatureSensor_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_TemperatureSensor_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegeneratorType_TemperatureSensor_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegeneratorType_BulkContainer_TemperatureSensor_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_BulkContainer_TemperatureSensor_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_BulkContainer_TemperatureSensor_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegeneratorType_BulkContainer_TemperatureSensor_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_Setpoint = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_SetSetpoint_InputArguments, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_T_H_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_T_H_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_T_H_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_T_H_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Heater_T_H_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Heater_T_H_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Heater_T_H_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Ventilator_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Ventilator_Setpoint = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Ventilator_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegeneratorType_Ventilator_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegeneratorType_Ventilator_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.PackedBedRegeneratorType_Ventilator_SetSetpoint_InputArguments, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_MassFlowSensor_CurrentMassFlow Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_MassFlowSensor_CurrentMassFlow = new ExpandedNodeId(Variables.VentilatorType_MassFlowSensor_CurrentMassFlow, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_MassFlowSensor_CurrentMassFlow_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_MassFlowSensor_CurrentMassFlow_EngineeringUnits = new ExpandedNodeId(Variables.VentilatorType_MassFlowSensor_CurrentMassFlow_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_MassFlowSensor_CurrentMassFlow_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_MassFlowSensor_CurrentMassFlow_EURange = new ExpandedNodeId(Variables.VentilatorType_MassFlowSensor_CurrentMassFlow_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_MassFlowSensor_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_MassFlowSensor_SerialNumber = new ExpandedNodeId(Variables.VentilatorType_MassFlowSensor_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_Setpoint = new ExpandedNodeId(Variables.VentilatorType_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the VentilatorType_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId VentilatorType_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.VentilatorType_SetSetpoint_InputArguments, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EngineeringUnits = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L1_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L1_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L1_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L1_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L2_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L2_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L2_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L2_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L3_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L3_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L3_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L3_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L4_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_BulkContainer_T_L4_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_BulkContainer_T_L4_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_BulkContainer_T_L4_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_Setpoint = new ExpandedNodeId(Variables.PackedBedRegenerator_Heater_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.PackedBedRegenerator_Heater_SetSetpoint_InputArguments, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_T_H_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_T_H_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_Heater_T_H_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_T_H_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_T_H_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_Heater_T_H_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Heater_T_H_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Heater_T_H_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_Heater_T_H_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_i_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_i_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_T_i_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_i_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_i_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_T_i_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_i_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_i_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_T_i_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_o_CurrentTemperature Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_o_CurrentTemperature = new ExpandedNodeId(Variables.PackedBedRegenerator_T_o_CurrentTemperature, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_o_CurrentTemperature_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_o_CurrentTemperature_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_T_o_CurrentTemperature_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_T_o_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_T_o_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_T_o_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EngineeringUnits Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EngineeringUnits = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EngineeringUnits, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EURange Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EURange = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_m_flow_CurrentMassFlow_EURange, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_m_flow_SerialNumber Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_m_flow_SerialNumber = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_m_flow_SerialNumber, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_Setpoint Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_Setpoint = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_Setpoint, Namespaces.ASG_NS);

        /// <summary>
        /// The identifier for the PackedBedRegenerator_Ventilator_SetSetpoint_InputArguments Variable.
        /// </summary>
        public static readonly ExpandedNodeId PackedBedRegenerator_Ventilator_SetSetpoint_InputArguments = new ExpandedNodeId(Variables.PackedBedRegenerator_Ventilator_SetSetpoint_InputArguments, Namespaces.ASG_NS);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares constants for all VariableType in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.6.2")]
    public static partial class VariableTypeIds
    {
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the <TemperatureSensor> component.
        /// </summary>
        public const string TemperatureSensor = "<TemperatureSensor>";
        /// <summary>
        /// The BrowseName for the BaseSensorType component.
        /// </summary>
        public const string BaseSensorType = "BaseSensorType";
        /// <summary>
        /// The BrowseName for the BulkContainer component.
        /// </summary>
        public const string BulkContainer = "BulkContainer";
        /// <summary>
        /// The BrowseName for the BulkContainerType component.
        /// </summary>
        public const string BulkContainerType = "BulkContainerType";
        /// <summary>
        /// The BrowseName for the CurrentMassFlow component.
        /// </summary>
        public const string CurrentMassFlow = "CurrentMassFlow";
        /// <summary>
        /// The BrowseName for the CurrentTemperature component.
        /// </summary>
        public const string CurrentTemperature = "CurrentTemperature";
        /// <summary>
        /// The BrowseName for the Heater component.
        /// </summary>
        public const string Heater = "Heater";
        /// <summary>
        /// The BrowseName for the HeaterType component.
        /// </summary>
        public const string HeaterType = "HeaterType";
        /// <summary>
        /// The BrowseName for the MassFlowSensor component.
        /// </summary>
        public const string MassFlowSensor = "MassFlowSensor";
        /// <summary>
        /// The BrowseName for the MassFlowSensorType component.
        /// </summary>
        public const string MassFlowSensorType = "MassFlowSensorType";
        /// <summary>
        /// The BrowseName for the PackedBedRegenerator component.
        /// </summary>
        public const string PackedBedRegenerator = "PackedBedRegenerator";
        /// <summary>
        /// The BrowseName for the PackedBedRegeneratorType component.
        /// </summary>
        public const string PackedBedRegeneratorType = "PackedBedRegeneratorType";
        /// <summary>
        /// The BrowseName for the SerialNumber component.
        /// </summary>
        public const string SerialNumber = "SerialNumber";
        /// <summary>
        /// The BrowseName for the SetSetpoint component.
        /// </summary>
        public const string SetSetpoint = "SetSetpoint";
        /// <summary>
        /// The BrowseName for the Setpoint component.
        /// </summary>
        public const string Setpoint = "Setpoint";
        /// <summary>
        /// The BrowseName for the T_H component.
        /// </summary>
        public const string T_H = "T_H";
        /// <summary>
        /// The BrowseName for the T_L1 component.
        /// </summary>
        public const string T_L1 = "T_L1";
        /// <summary>
        /// The BrowseName for the T_L2 component.
        /// </summary>
        public const string T_L2 = "T_L2";
        /// <summary>
        /// The BrowseName for the T_L3 component.
        /// </summary>
        public const string T_L3 = "T_L3";
        /// <summary>
        /// The BrowseName for the T_L4 component.
        /// </summary>
        public const string T_L4 = "T_L4";
        /// <summary>
        /// The BrowseName for the T_i component.
        /// </summary>
        public const string T_i = "T_i";
        /// <summary>
        /// The BrowseName for the T_o component.
        /// </summary>
        public const string T_o = "T_o";
        /// <summary>
        /// The BrowseName for the TemperatureSensorType component.
        /// </summary>
        public const string TemperatureSensorType = "TemperatureSensorType";
        /// <summary>
        /// The BrowseName for the Ventilator component.
        /// </summary>
        public const string Ventilator = "Ventilator";
        /// <summary>
        /// The BrowseName for the VentilatorType component.
        /// </summary>
        public const string VentilatorType = "VentilatorType";
        /// <summary>
        /// The BrowseName for the m_flow component.
        /// </summary>
        public const string m_flow = "m_flow";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the ASG_NS namespace.
        /// </summary>
        public const string ASG_NS = "http://auto.tuwien.ac.at/PackedBedRegenerator/";

        /// <summary>
        /// The URI for the ASG_NSXsd namespace.
        /// </summary>
        public const string ASG_NSXsd = "http://auto.tuwien.ac.at/PackedBedRegenerator/Types.xsd";
    }
    #endregion
}

